name: Update Burpsuite to the latest early adopter version by scrapping Portswagger release website

on:
  push:
    branches: ["main"]
  pull_request: 
    branches: ["main"]
  schedule:
    - cron: "0 10 * * 1"   # Every Monday at 10:00 UTC run update
jobs:
  Bump-BurpSuite-LatestVersion:
    runs-on: ubuntu-latest
    environment: CI_PROD
    container: 
      image: archlinux:latest
    steps:
      - name: Pacman key init, upgrade, update to latest
        run: pacman-key --init && pacman -Syu --noconfirm git openssh
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          # TODO: Build automatically inside an ArchLinux Chroot
          # Use ssh-agent for private key
      - name: After update, restart gpg-server as it may be old
        run : gpgconf --kill all
      - name: Install dependencies for PKGBUILD in container
        run: |
          pacman -S --noconfirm java-runtime
      - uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Create a user for makepkg usage
        run: |
          chmod a+rwx ./update.sh
          chmod a+rwx -R .
          useradd makepkg-user
      - name: Git configuration
        run: |
          git config --global init.defaultBranch master
          git config --global user.email "14914796+AkechiShiro@users.noreply.github.com"
          git config --global user.name "Automatic GitHub CI"
      - name: Git clone from AUR
        run: GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=accept-new" git clone ssh://aur@aur.archlinux.org/burpsuite.git
      # INSERT step to setup git config from ENV variable containing secrets????
      # TODO: Find if that's a good solution ^ or to avoid in terms of security
      # Read a lot of documentation and blogs...
      # TODO: Forced to use chroot because we are the root user in the container
      - name: Build latest update from upstream
        run: |
          chmod +x ./update.sh
          su makepkg-user -c "bash ./update.sh"
          # Move into AUR git repo
          #- name: Git Push
          #  run: | 
          #    git status
          #    git push origin master
      - name: Copy updated scripts to AUR repo and commit
        run: |
          cd burpsuite
          cp ../PKGBUILD ./
          cp ../.SRCINFO ./
          # Push to AUR the update
          git status
          git checkout master
          git add -A PKGBUILD .SRCINFO 
          git diff-index --quiet HEAD || pkgnew=$(sed -Ei "1,\$s|^(pkgver=).*|\1$pkgver_date|" PKGBUILD) git commit -m "Update to $pkgnew" 
          git status
          git push -u origin master
          cd ..
          cd ..
      - uses: EndBug/add-and-commit@v9
        with:
         # The arguments for the `git add` command (see the paragraph below for more info)
         # Default: '.'
         add: '-A'

         # The name of the user that will be displayed as the author of the commit.
         # Default: depends on the default_author input
         author_name: "GITHUB CI"

         # The email of the user that will be displayed as the author of the commit.
         # Default: depends on the default_author input
         author_email: "14914796+AkechiShiro@users.noreply.github.com"

         # Additional arguments for the git commit command. The --message argument is already set by the message input.
         # Default: ''
         commit: --signoff

         # The name of the custom committer you want to use, if different from the author of the commit.
         # Default: the name of the author (set with either author_name or default_author)
         committer_name: "Samy Lahfa"

         # The email of the custom committer you want to use, if different from the author of the commit.
         # Default: the email of the author (set with either author_email or default_author)
         committer_email: "14914796+AkechiShiro@users.noreply.github.com"

         # The local path to the directory where your repository is located. You should use actions/checkout first to set it up.
         # Default: '.'
         cwd: '.'

         # Determines the way the action fills missing author name and email. Three options are available:
         # - github_actor -> UserName <UserName@users.noreply.github.com>
         # - user_info -> Your Display Name <your-actual@email.com>
         # - github_actions -> github-actions <email associated with the github logo>
         # Default: github_actor
         default_author: github_actor

         # Arguments for the git fetch command. If set to false, the action won't fetch the repo.
         # For more info as to why fetching is usually recommended, please see the "Performance on large repos" FAQ. 
         # Default: --tags --force
         fetch: false

         # The message for the commit.
         # Default: 'Commit from GitHub Actions (name of the workflow)'
         message: 'Update to latest AppImage version'

         # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
         # - ignore -> errors will be logged but the step won't fail
         # - exitImmediately -> the action will stop right away, and the step will fail
         # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
         # Default: ignore
         pathspec_error_handling: ignore

         # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
         # Default: true
         push: true
